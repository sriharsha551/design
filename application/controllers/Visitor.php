<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Visitor extends User_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Visitor_model');
        /* Title Page :: Common */
        $this->page_title->push('Visitors');
        $this->data['pagetitle'] = $this->page_title->show();

        /* Breadcrumbs :: Common */
        $this->breadcrumbs->unshift(1, 'Visitors', 'visitor');
    } 

    /*
     * Listing of visitors
     */
    function index()
    {
        $this->data['breadcrumb'] = $this->breadcrumbs->show();
        $this->data['visitors'] = $this->Visitor_model->get_all_visitors();
        $this->template->public_render('visitor/index', $this->data);
    }

    /*
     * Adding a new visitor
     */
    function add()
    {
        $this->breadcrumbs->unshift(2, 'Create', 'visitor/add');
        $this->data['breadcrumb'] = $this->breadcrumbs->show();
        $this->load->library('form_validation');

		$this->form_validation->set_rules('name','Name','required');
		$this->form_validation->set_rules('email','Email','valid_email');
		$this->form_validation->set_rules('mobile','Mobile','numeric');
		$this->form_validation->set_rules('requirement','Requirement','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'hear_from' => $this->input->post('hear_from'),
				'name' => $this->input->post('name'),
				'requirement' => $this->input->post('requirement'),
				'proffession' => $this->input->post('proffession'),
				'mobile' => $this->input->post('mobile'),
				'email' => $this->input->post('email'),
				'referred_by' => $this->input->post('referred_by'),
				'address' => $this->input->post('address'),
				'comments' => $this->input->post('comments'),
            );
            
            $visitor_id = $this->Visitor_model->add_visitor($params);
            redirect('visitor/index');
        }
        else
        {            
            $this->template->public_render('visitor/add', $this->data);
        }
    }  

    /*
     * Editing a visitor
     */
    function edit($id)
    {   
        // check if the visitor exists before trying to edit it
        $this->breadcrumbs->unshift(2, 'Update', 'visitor/edit');
        $this->data['breadcrumb'] = $this->breadcrumbs->show();
        $this->data['visitor'] = $this->Visitor_model->get_visitor($id);
        
        if(isset($this->data['visitor']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('name','Name','required');
			$this->form_validation->set_rules('email','Email','valid_email');
			$this->form_validation->set_rules('mobile','Mobile','numeric');
			$this->form_validation->set_rules('requirement','Requirement','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'hear_from' => $this->input->post('hear_from'),
					'name' => $this->input->post('name'),
					'requirement' => $this->input->post('requirement'),
					'proffession' => $this->input->post('proffession'),
					'mobile' => $this->input->post('mobile'),
					'email' => $this->input->post('email'),
					'referred_by' => $this->input->post('referred_by'),
					'address' => $this->input->post('address'),
					'comments' => $this->input->post('comments'),
                );

                $this->Visitor_model->update_visitor($id,$params);            
                redirect('visitor/index');
            }
            else
            {
                $this->template->public_render('visitor/edit', $this->data);
            }
        }
        else
            show_error('The visitor you are trying to edit does not exist.');
    } 

    /*
     * Deleting visitor
     */
    function remove($id)
    {
        $visitor = $this->Visitor_model->get_visitor($id);

        // check if the visitor exists before trying to delete it
        if(isset($visitor['id']))
        {
            $this->Visitor_model->delete_visitor($id);
            redirect('visitor/index');
        }
        else
            show_error('The visitor you are trying to delete does not exist.');
    }
    
}

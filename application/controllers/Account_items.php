<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Account_items extends Admin_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Account_items_model');
         /* Title Page :: Common */
         $this->page_title->push('Items');
         $this->data['pagetitle'] = $this->page_title->show();
 
         /* Breadcrumbs :: Common */
         $this->breadcrumbs->unshift(1, 'Items', 'Account_items');
    } 

    /*
     * Listing of Account_items
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('Account_items/index?');
        $config['total_rows'] = $this->Account_items_model->get_all_Account_items_count();
        $this->pagination->initialize($config);
        /* Breadcrumbs */
        $this->data['breadcrumb'] = $this->breadcrumbs->show();
        $this->data['Account_items'] = $this->Account_items_model->get_all_Account_items($params);
        
        $this->template->public_render('Account_items/index', $this->data);

   
    }

    /*
     * Adding a new Account_items
     */
    function add()
    {   
        $this->breadcrumbs->unshift(2, 'Add', 'add');
        $this->data['breadcrumb'] = $this->breadcrumbs->show();
        $this->load->library('form_validation');

        $this->form_validation->set_rules('name','Name','required|max_length[255]');
        $this->form_validation->set_rules('price','price','required|max_length[11]');
		$this->form_validation->set_rules('quantity','quantity','required|max_length[255]');
		if($this->form_validation->run())     
        {   
            $params = array(
                'name' => $this->input->post('name'),
                'price' => $this->input->post('price'),
                'quantity' => $this->input->post('quantity'),
            );
            
            $Account_items_id = $this->Account_items_model->add_Account_items($params);
            redirect('Account_items/index');
        }
        else
        {      
            $this->template->public_render('Account_items/add', $this->data);      
           
        }
    }  

    /*
     * Editing a Account_items
     */
    function edit($id)
    {   
        $this->breadcrumbs->unshift(2, 'Edit', 'edit');
        $this->data['breadcrumb'] = $this->breadcrumbs->show();
        // check if the Account_items exists before trying to edit it
        $this->data['Account_items'] = $this->Account_items_model->get_Account_items($id);
        
        if(isset($this->data['Account_items']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('name','Name','required|max_length[255]');
		
			if($this->form_validation->run())     
            {   
                $params = array(
                    'name' => $this->input->post('name'),
                    'price' => $this->input->post('price'),
                    'quantity' => $this->input->post('quantity'),
                    'enabled' => $this->input->post('enabled'),
                    'updated_at' => date("Y-m-d H:i:s"),
                );

                $this->Account_items_model->update_Account_items($id,$params);            
                redirect('Account_items/index');
            }
            else
            {
                $this->template->public_render('Account_items/edit', $this->data); 
            }
        }
        else
            show_error('The Account_items you are trying to edit does not exist.');
    } 

    /*
     * Deleting Account_items
     */
    function remove($id)
    {
        $Account_items = $this->Account_items_model->get_Account_items($id);

        // check if the Account_items exists before trying to delete it
        if(isset($Account_items['id']))
        {
            $params = array(
                'deleted_at' => date("Y-m-d H:i:s"),
                'delete_status'=> '1',
            );
            $this->Account_items_model->delete_Account_items($id,$params);
            redirect('Account_items/index');
        }
        else
            show_error('The Account_items you are trying to delete does not exist.');
    }
    
}

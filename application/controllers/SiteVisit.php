<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */ 
class SiteVisit extends Admin_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('SiteVisit_model');
         /* Title Page :: Common */
         $this->page_title->push('SiteVisit');
         $this->data['pagetitle'] = $this->page_title->show();
 
         /* Breadcrumbs :: Common */
         $this->breadcrumbs->unshift(1, 'SiteVisit', 'SiteVisit');
    } 

    /*
     * Listing of SiteVisit
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('SiteVisit/index?');
        $config['total_rows'] = $this->SiteVisit_model->get_all_SiteVisit_count();
        $this->pagination->initialize($config);
        /* Breadcrumbs */
        $this->data['breadcrumb'] = $this->breadcrumbs->show();
        $this->data['sitevisit'] = $this->SiteVisit_model->get_all_SiteVisit($params);
        $query = $this->SiteVisit_model->select(); 
         $this->data['prj_names'] = null;
         if($query){
          $this->data['prj_names'] =  $query;
         }
        
        $this->template->public_render('SiteVisit/index', $this->data);

   
    }

    /*
     * Adding a new SiteVisit
     */
    function add()
    {   
        $this->breadcrumbs->unshift(2, 'Add', 'add');
        $this->data['breadcrumb'] = $this->breadcrumbs->show();
        $this->load->library('form_validation');

        $this->form_validation->set_rules('remarks','remarks','required|max_length[255]');
        $query = $this->SiteVisit_model->select(); 
         $this->data['PROJECTS'] = null;
         if($query){
          $this->data['PROJECTS'] =  $query;
         }
         $query1 = $this->SiteVisit_model->selectEmp(); 
         $this->data['EMPLOYEES'] = null;
         if($query1){
          $this->data['EMPLOYEES'] =  $query1;
         } 
		if($this->form_validation->run())     
        {   
            $params = array(
                'project_id' => $this->input->post('project_id'),  
            'site_visit_date'  => $this->input->post('date'),  
            'site_visit_time'   => $this->input->post('time'),  
            'site_engineer_id'   =>$this->input->post('emp'),
				'remarks' => $this->input->post('remarks'),
            );
            
            $SiteVisit_id = $this->SiteVisit_model->add_SiteVisit($params);
            redirect('SiteVisit/index');
        }
        else
        {      
            $this->template->public_render('SiteVisit/add', $this->data);      
           
        }
    }  

    /*
     * Editing a SiteVisit
     */
    function edit($id)
    {   
        $_SESSION['visit_filter_id'] = $this->input->post('prj_id');         

        $this->breadcrumbs->unshift(2, 'Edit', 'edit');
        $this->data['breadcrumb'] = $this->breadcrumbs->show();
        // check if the SiteVisit exists before trying to edit it
        $this->data['sitevisit'] = $this->SiteVisit_model->get_SiteVisit($id);
        $this->data['sitevisit']['project_name'] = $this->SiteVisit_model->get_name($this->data['sitevisit']['project_id']);
        $this->data['sitevisit']['Employee_name'] = $this->SiteVisit_model->get_empname($this->data['sitevisit']['site_engineer_id']);
        $query = $this->SiteVisit_model->select(); 
         $this->data['PROJECTS'] = null;
         if($query){
          $this->data['PROJECTS'] =  $query;
         }
         $query1 = $this->SiteVisit_model->selectEmp(); 
         $this->data['EMPLOYEES'] = null;
         if($query1){
          $this->data['EMPLOYEES'] =  $query1;
         } 
        if(isset($this->data['sitevisit']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('remarks','remarks','required|max_length[255]');
		
			if($this->form_validation->run())     
            {   
                $params = array(
                    'project_id' => $this->input->post('project_id'),
                    'site_visit_date'  => $this->input->post('date'),  
                    'site_visit_time'   => $this->input->post('time'),  
                    'site_engineer_id'   =>$this->input->post('emp'),
				    'remarks' => $this->input->post('remarks'),
                );
                $this->SiteVisit_model->update_SiteVisit($id,$params);            
                redirect('SiteVisit/index');
            }
            else
            {
                
                $this->template->public_render('SiteVisit/edit', $this->data); 
            }
        }
        else
            show_error('The SiteVisit you are trying to edit does not exist.');
    } 

    /*
     * Deleting SiteVisit
     */
    function remove($id)
    {
        $SiteVisit = $this->SiteVisit_model->get_SiteVisit($id);

        // check if the SiteVisit exists before trying to delete it
        if(isset($SiteVisit['id']))
        {
            $this->SiteVisit_model->delete_SiteVisit($id);
            redirect('SiteVisit/index');
        }
        else
            show_error('The SiteVisit you are trying to delete does not exist.');
    }
    
}

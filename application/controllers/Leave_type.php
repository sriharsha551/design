<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Leave_type extends User_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Leave_type_model');
        /* Title Page :: Common */
        $this->page_title->push('Leave Type');
        $this->data['pagetitle'] = $this->page_title->show();

        /* Breadcrumbs :: Common */
        $this->breadcrumbs->unshift(1, 'Interview Evaluation', 'interview_evaluation');
    } 

    /*
     * Listing of leave_type
     */
    function index()
    {
        /* Breadcrumbs */
        $this->data['breadcrumb'] = $this->breadcrumbs->show();
        $this->data['leave_type'] = $this->Leave_type_model->get_all_leave_type();
        $this->template->public_render('leave_type/index', $this->data);        
    }

    /*
     * Adding a new leave_type
     */
    function add()
    {   
        $this->breadcrumbs->unshift(2, 'Create', 'Leave_type/create');
        $this->data['breadcrumb'] = $this->breadcrumbs->show();
        $this->load->library('form_validation');

		$this->form_validation->set_rules('leaveType','LeaveType','required');
		$this->form_validation->set_rules('noOfLeaves','NoOfLeaves','required|is_natural');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'leaveType' => $this->input->post('leaveType'),
				'noOfLeaves' => $this->input->post('noOfLeaves'),
            );
            
            $leave_type_id = $this->Leave_type_model->add_leave_type($params);
            redirect('leave_type/index');
        }
        else
        {          
            $this->template->public_render('leave_type/add', $this->data);   
        }
    }  

    /*
     * Editing a leave_type
     */
    function edit($id)
    {   
        $this->breadcrumbs->unshift(2, 'Exit', 'Leave_type/Exit');
        $this->data['breadcrumb'] = $this->breadcrumbs->show();
        // check if the leave_type exists before trying to edit it
        $this->data['leave_type'] = $this->Leave_type_model->get_leave_type($id);
        
        if(isset($this->data['leave_type']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('leaveType','LeaveType','required');
			$this->form_validation->set_rules('noOfLeaves','NoOfLeaves','required|is_natural');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'leaveType' => $this->input->post('leaveType'),
					'noOfLeaves' => $this->input->post('noOfLeaves'),
                );

                $this->Leave_type_model->update_leave_type($id,$params);            
                redirect('leave_type/index');
            }
            else
            {
                $this->template->public_render('leave_type/edit', $this->data);  
            }
        }
        else
            show_error('The leave_type you are trying to edit does not exist.');
    } 

    /*
     * Deleting leave_type
     */
    function remove($id)
    {
        $leave_type = $this->Leave_type_model->get_leave_type($id);

        // check if the leave_type exists before trying to delete it
        if(isset($leave_type['id']))
        {
            $this->Leave_type_model->delete_leave_type($id);
            redirect('leave_type/index');
        }
        else
            show_error('The leave_type you are trying to delete does not exist.');
    }
    
}
